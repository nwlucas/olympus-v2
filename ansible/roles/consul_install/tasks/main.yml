---
# tasks file for consul_install

- name: Include check/asserts
  ansible.builtin.import_tasks: ./consul_asserts.yml
  tags:
    - consul-install
    - consul-config
    - consul-certs

- name: test for binary
  ansible.builtin.stat:
    path: "{{ hashi_binary_dir }}/consul"
  register: consul_binary
  tags:
    - consul-install
    - consul-config
    - consul-certs

- name: test for symlink to binary
  ansible.builtin.stat:
    path: "/usr/local/bin/consul"
  register: consul_binary_link
  when: hashi_binary_dir != "/usr/local/bin"
  tags:
    - consul-install
    - consul-config
    - consul-certs

- name: test for systemd service unit
  ansible.builtin.stat:
    path: "/etc/systemd/system/consul.service"
  register: consul_systemd
  tags:
    - consul-install
    - consul-config
    - consul-certs

- name: register binary version
  ansible.builtin.command:
    cmd: "{{ hashi_binary_dir }}/consul -v"
  register: consul_binary_version
  changed_when: false
  when: consul_binary.stat.exists
  tags:
    - consul-install
    - consul-config
    - consul-certs

- name: set the discovered binary version
  ansible.builtin.set_fact:
    _discovered_binary_version: "{{ consul_binary_version.stdout_lines[0].split(' ')[1][1:] }}"
  when: consul_binary.stat.exists
  tags:
    - consul-install
    - consul-config
    - consul-certs

- name: testing variable _discovered_binary_version
  ansible.builtin.debug:
    var: _discovered_binary_version
  when: consul_install_debug
  tags:
    - consul-install
    - consul-config
    - consul-certs

- name: determine if to install or upgrade consul binary
  ansible.builtin.set_fact:
    _install_consul: true
  when: (not consul_binary.stat.exists)
    or (consul_binary.stat.exists and _discovered_binary_version is version(consul_version,operator='lt',version_type='semver'))
    or consul_install_override
  tags:
    - consul-install
    - consul-config
    - consul-certs

- name: testing variable consul_binary_version
  ansible.builtin.debug:
    var: _install_consul
  when: consul_install_debug
  tags:
    - consul-install
    - consul-config
    - consul-certs

- name: testing variable consul_version to be installed
  ansible.builtin.debug:
    var: consul_version
  when: consul_install_debug and _install_consul
  tags:
    - consul-install
    - consul-config
    - consul-certs

- name: testing variable consul_archive_url to get consul binary from
  ansible.builtin.debug:
    var: consul_archive_url
  when: consul_install_debug and _install_consul
  tags:
    - consul-install
    - consul-config
    - consul-certs

- name: create consul group
  ansible.builtin.group:
    name: "{{ consul_group }}"
  tags:
    - consul-config
    - consul-certs
    - consul-install

- name: create consul user
  ansible.builtin.user:
    name: "{{ consul_user }}"
    group: "{{ consul_group }}"
    system: true
    shell: "/sbin/nologin"
    comment: "consul nologin user"
    home: "{{ consul_config_path | dirname }}"
    state: present
  tags:
    - consul-config
    - consul-certs
    - consul-install

- name: install prerequisites
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: true
    autoremove: true
    autoclean: true
  when: consul_install_dependencies is defined
  loop:
    - "{{ consul_install_dependencies }}"
  tags:
    - consul-config
    - consul-certs
    - consul-install

- name: create consul dirs
  ansible.builtin.file:
    path: "{{ item.dir }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: 0755
    state: directory
  loop: "{{ consul_dirs }}"
  tags:
    - consul-config
    - consul-certs
    - consul-install

- name: install consul
  ansible.builtin.include_tasks:
    file: consul_install.yml
  when: _install_consul
  tags:
    - consul-install
    - consul-config
    - consul-certs

- name: install consul certs
  ansible.builtin.include_tasks: ./consul_certs.yml
  when: (_consul_certs is defined and _consul_certs.keys()|length > 0)
    or (_consul_ca is defined and _consul_ca.keys()|length > 0)
  tags:
    - consul-install
    - consul-certs
    - consul-config

- name: configure consul
  ansible.builtin.include_tasks: ./consul_config.yml
  tags:
    - consul-install
    - consul-config

- name: ensure consul service is enabled
  ansible.builtin.systemd:
    name: consul.service
    enabled: true
    state: started
  tags:
    - consul-install
    - consul-config
