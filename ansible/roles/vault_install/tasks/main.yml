---
# tasks file for vault-install

- name: Include check/asserts
  ansible.builtin.import_tasks: ./vault_asserts.yml

- name: test for binary
  ansible.builtin.stat:
    path: "{{ hashi_binary_dir }}/vault"
  register: vault_binary

- name: test for symlink to binary
  ansible.builtin.stat:
    path: "/usr/local/bin/vault"
  register: vault_binary_link
  when: hashi_binary_dir != "/usr/local/bin"

- name: test for systemd service unit
  ansible.builtin.stat:
    path: "/etc/systemd/system/vault.service"
  register: vault_systemd

- name: register binary version
  ansible.builtin.command:
    cmd: "{{ hashi_binary_dir }}/vault -v"
  register: vault_binary_version
  changed_when: false
  when: vault_binary.stat.exists

- name: set the discovered binary version
  ansible.builtin.set_fact:
    _discovered_binary_version: "{{ vault_binary_version.stdout.split(' ')[1][1:] }}"
  when: vault_binary.stat.exists

- name: determine if to install or upgrade vault binary
  ansible.builtin.set_fact:
    _install_vault: true
  when: (not vault_binary.stat.exists)
    or (vault_binary.stat.exists and _discovered_binary_version is version(vault_version,operator='lt',version_type='semver'))
    or vault_install_override

- name: testing variable vault_binary_version
  ansible.builtin.debug:
    var: _install_vault
  when: vault_install_debug

- name: testing variable vault_version to be installed
  ansible.builtin.debug:
    var: vault_version
  when: vault_install_debug and _install_vault

- name: testing variable vault_archive_url to get vault binary from
  ansible.builtin.debug:
    var: vault_archive_url
  when: vault_install_debug and _install_vault

- name: install vault
  ansible.builtin.include_tasks: ./install.yml
  when: _install_vault

- name: configure vault
  ansible.builtin.include_tasks: ./config.yml
