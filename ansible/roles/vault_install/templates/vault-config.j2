{%- if vault_listener_interface == "default" %}
  {% set vault_listener_address =  ansible_facts['default_ipv4']['address'] %}
{% elif vault_listener_interface == "all" %}
  {% set vault_listener_address =  "0.0.0.0" -%}
{% else %}
  {% set vault_listener_address =  ansible_facts[vault_listener_interface]['ipv4']['address'] -%}
{% endif %}

{%- if vault_cluster_address is defined and vault_cluster_address != "" %}
  {% set _vault_cluster_address = vault_cluster_address %}
{% else %}
  {% set _vault_cluster_address = vault_listener_address %}
{% endif %}

listener "tcp" {
  address     = "127.0.0.1:{{ vault_listener_port }}"
  tls_disable = true
}

listener "tcp" {
  address          = "{{ vault_listener_address }}:{{ vault_listener_port }}"
  cluster_address  = "{{ vault_listener_address }}:{{ vault_cluster_port }}"
  tls_cert_file     = "{{ vault_config_path | dirname }}/certs/client/{{ _vault_certs['client'][vault_datacenter]['cert_public_key']['filename'] }}"
  tls_key_file      = "{{ vault_config_path | dirname }}/certs/client/{{ _vault_certs['client'][vault_datacenter]['cert_private_key']['filename'] }}"
  tls_min_version  = "tls12"
}

{% if vault_storage == "raft" %}
storage "raft" {
  path       = "{{ vault_config_path | dirname }}/data"
  node_id    = "{{ ansible_facts['hostname'] }}"
{% for node in groups['vault_servers'] %}
  retry_join {
    leader_api_addr        = "https://{{ node }}:{{ vault_listener_port }}"
    leader_ca_cert_file     = "{{ vault_config_path | dirname }}/certs/hashi_ca.pem"
    leader_client_cert_file = "{{ vault_config_path | dirname }}/certs/cluster/{{ _vault_certs['cluster'][inventory_hostname]['pub_cert']['filename'] }}"
    leader_client_key_file  = "{{ vault_config_path | dirname }}/certs/cluster/{{ _vault_certs['cluster'][inventory_hostname]['prv_key']['filename'] }}"
  }
{% endfor %}
}
disable_mlock = true
{% endif %}

{% if vault_ui %}
ui            = true
{% endif %}
api_addr      = "https://{{ vault_listener_address }}:{{ vault_listener_port }}"
cluster_addr  = "https://{{ _vault_cluster_address }}:{{ vault_cluster_port }}"

service_registration "consul" {}
enable_response_header_raft_node_id = true
