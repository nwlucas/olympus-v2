---
- name: preparing for cloudflared upgrade
  block:
    - name: get service status
      ansible.builtin.service_facts:
      register: services_state

    - name: stop cloudflared service
      ansible.builtin.systemd:
        name: cloudflared.service
        state: stop
      when:
        - "'cloudflared' in services_state.ansible_facts.services"
        - services_state.ansible_facts.services["cloudflared.service"].state == "running"
  when:
    - cloudflared_systemd.stat.exists
  tags:
    - cloudflared-install

- name: Ensure sha256sum is set from hashsum variable
  ansible.builtin.set_fact:
    cf_binary_name: "cloudflared-{{ _discovered_os }}-{{ _discovered_arch }}"
  changed_when: false
  check_mode: false

- name: ensure the hashsum is downloaded
  ansible.builtin.uri:
    url: "{{ cloudflared_repo_url }}/releases/tag/{{ install_version }}"
    return_content: true
  register: cf_hash_sum_raw
  check_mode: false

- name: Ensure sha256sum is set from hashsum variable
  ansible.builtin.set_fact:
    cf_hash_sum: "{{ (cf_hash_sum_raw.content.split('\n') |
      select('search', cf_binary_name) |
      first).split() | last }}"
  changed_when: false
  check_mode: false

- name: print hash sum
  ansible.builtin.debug:
    var: cf_hash_sum
  check_mode: false

- name: download binary
  ansible.builtin.get_url:
    url: "{{ cloudflared_dl_url }}/{{ install_version }}/{{ cf_binary_name }}"
    dest: "{{ cloudflared_binary_dir }}/cloudflared"
    checksum: "sha256:{{ cf_hash_sum }}"
    owner: "{{ cloudflared_user }}"
    group: "{{ cloudflared_group }}"
    mode: 0555
  notify:
    - "restart cloudflared services"

- name: create symbolic link for cloudflared
  ansible.builtin.file:
    src: "{{ cloudflared_binary_dir }}/cloudflared"
    dest: "/usr/local/bin/cloudflared"
    state: link
    owner: "{{ cloudflared_user }}"
    group: "{{ cloudflared_group }}"
    mode: 0555
  when:
    - cloudflared_binary_dir != "/usr/local/bin"
    - not cloudflared_binary_link.stat.exists
  notify:
    - "restart cloudflared services"
